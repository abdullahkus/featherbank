server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://localhost:3306/accountsdb
    username: root
    password: root
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    sql:
      init:
        mode: always
  config:
    import: "optional:configserver:http://localhost:8071/"
  rabbitmq:
    host: localhost
    port: 5672
    username: "guest"
    password: "guest"
  cloud:
    feign:
      circuitbreaker:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  health:
    readiness:
      enabled: true
    liveliness:
      enabled: true
  info:
    env:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

logging:
  level:
    com:
      featherbank:
        accounts: DEBUG

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Accounts Service"
    version: "1.0.0"

resilience4j:
  circuitbreaker:
    instances:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
  retry:
    configs:
      default:
        maxRetryAttempts: 3
        waitDuration: 100
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2.0
        ignoreExceptions:
          - java.lang.NullPointerException
        retryExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
  rateLimiter:
    configs:
      default:
        timeoutDuration: 1000
        limitRefreshPeriod: 1000
        limitForPeriod: 1